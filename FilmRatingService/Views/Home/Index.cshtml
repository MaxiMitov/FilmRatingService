@model FilmRatingService.Models.FeaturedMovieViewModel
@{
    ViewData["Title"] = "Film Rating Service";
}

<style>
    /* Your existing styles are here - I'm omitting them for brevity in this code block */
    /* but they should remain in your file. */
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #181818;
        color: #e0e0e0;
        margin: 0;
        padding: 0;
    }

    .header {
        background-color: #212121;
        color: #fff;
        padding: 15px 20px;
        position: sticky;
        top: 0;
        z-index: 100;
        box-shadow: 0 2px 5px rgba(0,0,0,0.3);
    }

    .header-content {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .logo {
        font-size: 28px;
        font-weight: bold;
        color: #f5c518; /* IMDb yellow */
    }

    .search-bar {
        display: flex;
        flex-grow: 1;
        margin: 0 20px;
    }

        .search-bar input[type="text"] {
            padding: 10px 15px;
            border: none;
            border-radius: 5px 0 0 5px;
            background-color: #333;
            color: #fff;
            flex-grow: 1;
        }

        .search-bar button {
            padding: 10px 15px;
            border: none;
            border-radius: 0 5px 5px 0;
            background-color: #f5c518;
            color: #000;
            cursor: pointer;
            font-weight: bold;
        }

    .user-actions a {
        color: #fff;
        text-decoration: none;
        margin-left: 15px;
        font-size: 16px;
    }

    .container {
        max-width: 1200px;
        margin: 30px auto;
        padding: 0 20px;
    }

    .featured {
        display: flex;
        background-color: #212121;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 12px rgba(0,0,0,0.6);
        margin-bottom: 40px;
    }

    .featured-img {
        position: relative;
        flex: 0 0 40%;
    }

        .featured-img img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            display: block;
        }

    .play-button {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 60px;
        color: rgba(255, 255, 255, 0.7);
        cursor: pointer;
        transition: transform 0.2s, opacity 0.2s;
    }

        .play-button:hover {
            transform: translate(-50%, -50%) scale(1.1);
            opacity: 1;
        }

    .featured-info {
        flex: 1;
        padding: 30px;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }

        .featured-info h2 {
            font-size: 28px;
            margin-bottom: 10px;
            font-weight: bold;
        }

        .featured-info p {
            color: #ccc;
            margin-bottom: 20px;
            line-height: 1.6;
        }

        .featured-info .featured-details {
            color: #999;
            font-size: 14px;
            margin-bottom: 15px;
        }

    .rating {
        display: flex;
        gap: 20px;
        font-size: 16px;
        color: #f5c518;
        margin-bottom: 20px;
    }

        .rating span {
            display: flex;
            align-items: center;
            gap: 8px;
        }

            .rating span.heart {
                color: #ff5a8d;
            }

            .rating span.like {
                color: #00d26a;
            }

    .watch-trailer-button {
        display: inline-block;
        padding: 12px 24px;
        background-color: #f5c518;
        color: #000;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
        transition: background-color 0.2s;
    }

        .watch-trailer-button:hover {
            background-color: #ffd700;
        }

    .more-movies {
        margin-top: 40px;
    }

        .more-movies h3 {
            margin-bottom: 20px;
            font-size: 24px;
            font-weight: bold;
            color: #fff;
        }

    .movie-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
        gap: 20px;
    }

    .movie-card {
        background-color: #212121;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 6px rgba(0,0,0,0.4);
        transition: transform 0.2s;
    }

        .movie-card:hover {
            transform: scale(1.05);
        }

        .movie-card img {
            width: 100%;
            height: 270px; /* Fixed height for consistency */
            object-fit: cover;
            display: block;
        }

        .movie-card .info {
            padding: 15px;
        }

        .movie-card h4 {
            margin: 0 0 8px;
            font-size: 18px;
            font-weight: bold;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .movie-card p { /* Assuming this is for genre/year */
            color: #aaa;
            font-size: 14px;
            margin-bottom: 5px;
        }

        .movie-card .card-rating {
            color: #f5c518;
            font-size: 14px;
            display: flex;
            align-items: center;
            gap: 5px;
        }

    .footer {
        background-color: #212121;
        color: #999;
        padding: 30px 20px;
        margin-top: 60px;
        font-size: 14px;
        text-align: center;
        border-top: 1px solid #333;
    }

        .footer a {
            color: #ccc;
            text-decoration: none;
            margin: 0 10px;
        }

            .footer a:hover {
                text-decoration: underline;
            }

    /* Pagination Styles (Can be customized further to match your dark theme) */
    .pagination {
        margin-top: 30px; /* Add some space above pagination */
    }

    .page-item.disabled .page-link {
        background-color: #333;
        border-color: #444;
        color: #6c757d;
    }

    .page-item .page-link {
        background-color: #212121;
        border-color: #444;
        color: #f5c518; /* IMDb yellow for links */
    }

        .page-item .page-link:hover {
            background-color: #333;
            color: #ffd700;
        }

    .page-item.active .page-link { /* You can add active class if you implement page numbers */
        background-color: #f5c518;
        border-color: #f5c518;
        color: #000;
    }

</style>

<div class="header">
    <div class="header-content">
        <div class="logo">IMDb</div>
        <div class="search-bar">
            <form asp-controller="Home" asp-action="Search" method="get" style="display: flex; width: 100%;">
                <input type="text" name="query" placeholder="Search Movies, TV Shows, etc..." style="padding: 10px 15px; border: none; border-radius: 5px 0 0 5px; background-color: #333; color: #fff; flex-grow: 1;">
                <button type="submit" style="padding: 10px 15px; border: none; border-radius: 0 5px 5px 0; background-color: #f5c518; color: #000; cursor: pointer; font-weight: bold;">Search</button>
            </form>
        </div>
        <div class="user-actions">
            @* This part will be updated later to show Logout/Username when logged in *@
            <a asp-area="Identity" asp-page="/Account/Login" class="text-light">Sign In</a> |
            <a asp-area="Identity" asp-page="/Account/Register" class="text-light">Register</a>
        </div>
    </div>
</div>

<div class="container">
    <div class="featured">
        <div class="featured-img">
            @if (!string.IsNullOrEmpty(Model.CoverImageUrl) && Model.CoverImageUrl != "/images/default-poster.png")
            {
                <img src="@Model.CoverImageUrl" alt="@Model.Title" />
            }
            else
            {
                <img src="/images/default-poster.png" alt="No Poster Available" />
            }
            <a href="@Model.VideoUrl" class="play-button">▶</a>
        </div>
        <div class="featured-info">
            <h2>@Model.Title</h2>
            <p class="featured-details">Action, Adventure · 2023</p> @* Consider making this dynamic *@
            <p>@Model.Description</p>
            <div class="rating">
                <span>⭐ @Model.Rating.ToString("0.0")</span> @* Format the rating *@
                <span class="like">👍 @Model.Likes</span>
                <span class="heart">💖 @Model.Hearts</span>
            </div>
            <a href="@Model.VideoUrl" class="watch-trailer-button">Watch Trailer</a>
        </div>
    </div>

    <div class="more-movies">
        <h3>
            Popular Movies
            @if (Model.PopularMoviesTotalPages > 0)
            {
                <small class="text-muted">(Page @Model.PopularMoviesCurrentPage of @Model.PopularMoviesTotalPages)</small>
            }
        </h3>
        <div class="movie-grid">
            @if (Model.PopularMovies != null && Model.PopularMovies.Any()) // Added .Any() for robustness
            {
                @foreach (var movie in Model.PopularMovies)
                {
                    <div class="movie-card">
                        @if (!string.IsNullOrEmpty(movie.PosterPath))
                        {
                            <img src="https://image.tmdb.org/t/p/w300/@movie.PosterPath" alt="@movie.Title" />
                        }
                        else
                        {
                            <img src="/images/default-thumbnail.png" alt="No Poster Available" /> @* Ensure you have this image or use the other default *@
                        }
                        <div class="info">
                            <h4>@movie.Title</h4>
                            <p>Genre · Year</p>  @* Consider making this dynamic *@
                            <div class="card-rating">⭐ @movie.VoteAverage.ToString("0.0")</div> @* Format the rating *@
                        </div>
                    </div>
                }
            }
            else
            {
                <p>No popular movies to display on this page.</p>
            }
        </div>

        @if (Model.PopularMovies != null && Model.PopularMovies.Any() && Model.PopularMoviesTotalPages > 1)
        {
            <nav aria-label="Popular Movies Navigation">
                <ul class="pagination justify-content-center">
                    @if (Model.HasPreviousPopularMoviesPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@(Model.PopularMoviesCurrentPage - 1)">Previous</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Previous</span>
                        </li>
                    }

                    @* Optional: Loop to display page numbers - for simplicity, keeping Previous/Next only for now
                @{
                int startPage = Math.Max(1, Model.PopularMoviesCurrentPage - 2);
                int endPage = Math.Min(Model.PopularMoviesTotalPages, Model.PopularMoviesCurrentPage + 2);
                if (Model.PopularMoviesTotalPages <= 5) { // Show all pages if 5 or less
                startPage = 1;
                endPage = Model.PopularMoviesTotalPages;
                } else {
                if (Model.PopularMoviesCurrentPage <= 3) {
                endPage = 5;
                } else if (Model.PopularMoviesCurrentPage + 2 >= Model.PopularMoviesTotalPages) {
                startPage = Model.PopularMoviesTotalPages - 4;
                }
                }
                }
                @if (startPage > 1) {
                <li class="page-item"><a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="1">1</a></li>
                @if (startPage > 2) { <li class="page-item disabled"><span class="page-link">...</span></li> }
                }
                @for (int i = startPage; i <= endPage; i++)
                {
                <li class="page-item @(i == Model.PopularMoviesCurrentPage ? "active" : "")">
                <a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
                }
                @if (endPage < Model.PopularMoviesTotalPages) {
                @if (endPage < Model.PopularMoviesTotalPages - 1) { <li class="page-item disabled"><span class="page-link">...</span></li> }
                <li class="page-item"><a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@Model.PopularMoviesTotalPages">@Model.PopularMoviesTotalPages</a></li>
                }
                *@

                    @if (Model.HasNextPopularMoviesPage)
                    {
                        <li class="page-item">
                            <a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@(Model.PopularMoviesCurrentPage + 1)">Next</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item disabled">
                            <span class="page-link">Next</span>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>

    <div class="more-movies">
        <h3>Top Rated Movies</h3>
        <div class="movie-grid">
            @for (int i = 7; i <= 12; i++)
            {
                <div class="movie-card">
                    <img src="/images/sample-thumbnail.png" alt="Top Movie @i" /> @* Ensure you have this image *@
                    <div class="info">
                        <h4>Top Movie @i</h4>
                        <p>Drama · 202@i</p>
                        <div class="card-rating">⭐ 8.5</div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<div class="footer">
    <div class="footer-links">
        <a href="#">About</a> | <a href="#">Help</a> | <a href="#">Contact</a> | <a href="#">Privacy Policy</a> | <a href="#">Terms of Service</a>
    </div>
    <p>&copy; @DateTime.Now.Year Film Rating Service - Inspired by IMDb</p> @* Changed to dynamic year *@
</div>