@model FilmRatingService.Models.MovieDetailsPageViewModel
@{
    ViewData["Title"] = Model.Movie?.Title ?? "Movie Details";
}

<style>
    /* Styles from your previous Details.cshtml (movie-details-container, etc.) */
    /* I'm including them here for completeness based on previous versions. */
    /* Ensure these are adapted or moved to site.css if they become common. */
    .movie-details-container {
        max-width: 900px;
        margin: 20px auto;
        padding: 20px;
        background-color: #2b2b2b;
        border-radius: 8px;
        color: #f0f0f0;
    }

    .movie-details-header {
        margin-bottom: 20px;
        border-bottom: 1px solid #444;
        padding-bottom: 15px;
    }

        .movie-details-header h1 {
            color: #f5c518;
            margin-bottom: 5px;
        }

    .movie-details-content {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .movie-details-poster img {
        width: 100%;
        max-width: 300px;
        height: auto;
        border-radius: 5px;
        display: block;
        margin: 0 auto 20px auto;
    }

    .movie-details-info {
        flex-grow: 1;
    }

        .movie-details-info p {
            margin-bottom: 10px;
            line-height: 1.6;
        }

        .movie-details-info strong {
            color: #ccc;
        }

    .rating-section {
        margin-top: 30px;
        padding-top: 20px;
        border-top: 1px solid #444; /* Separator line */
    }

        .rating-section h3 {
            margin-bottom: 20px;
            color: #f5c518;
        }

    .add-review-link-container {
        margin-bottom: 20px;
    }

    .btn-add-review { /* Style for the add review button */
        background-color: #f5c518;
        color: #000;
        font-weight: bold;
        padding: 8px 15px;
        text-decoration: none;
        border-radius: 4px;
    }

        .btn-add-review:hover {
            background-color: #e4b80f;
        }


    @@media (min-width: 768px) {
        .movie-details-content {
            flex-direction: row;
        }

        .movie-details-poster img {
            margin: 0;
        }
    }
</style>

<div class="movie-details-container">
    @if (Model.Movie != null)
    {
        <div class="movie-details-header">
            <h1>@Model.Movie.Title</h1>
        </div>

        <div class="movie-details-content">
            <div class="movie-details-poster">
                @if (!string.IsNullOrEmpty(Model.Movie.PosterPath))
                {
                    <img src="https://image.tmdb.org/t/p/w500/@Model.Movie.PosterPath" alt="Poster for @Model.Movie.Title" />
                }
                else
                {
                    <img src="/images/default-poster.png" alt="No poster available" />
                }
            </div>
            <div class="movie-details-info">
                <p><strong>Overview:</strong> @Model.Movie.Overview</p>
                @if (Model.Movie.VoteAverage > 0)
                {
                    <p><strong>Average Vote (from TMDB):</strong> @Model.Movie.VoteAverage.ToString("0.0") / 10</p>
                }
                @* Add other movie details here as needed *@
            </div>
        </div>

        <div class="rating-section">
            <h3>User Reviews & Ratings</h3>

            @if (User.Identity.IsAuthenticated) // Only show "Add Review" link if user is logged in
            {
                <div class="add-review-link-container">
                    <a asp-controller="Reviews" asp-action="Create" asp-route-movieId="@Model.Movie.Id" class="btn-add-review">
                        Write a Review for @Model.Movie.Title
                    </a>
                </div>
            }
            else
            {
                <p><a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@(Context.Request.Path + Context.Request.QueryString.Value)">Login</a> to write a review.</p>
            }

            @* Render the partial view for displaying reviews *@
            <partial name="/Views/Reviews/_MovieReviewsList.cshtml" model="Model.Reviews" />
        </div>
    }
    else
    {
        <p class="text-danger">Movie details could not be loaded.</p>
    }
</div>

@* The old AJAX script section can be removed as we are now loading reviews with the page *@
@* @section Scripts {
        <script>
            // Previous AJAX call for dummy ratings is no longer needed here
            // if reviews are loaded server-side and passed in the ViewModel.
        </script>
    }
*@